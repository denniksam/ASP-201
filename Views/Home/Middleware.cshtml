@{
    ViewData["Title"] = "Middleware";
}

<div>
    <h1 class="display-4">Middleware - ПЗ проміжного рівня</h1>
</div>
<p>
    Сесії дозволяють зберігти дані, але для їх відновлення необхідно впровадити
    коди. Якщо відомості із сесії потрібні у різних місцях сайту, то коди мають
    повторюватись у різних контроллерах/методах/представленнях.
</p>
<p>
    Middleware - частина активності, яка виконується на перших етапах оброблення
    запиту, до того, як буде зроблено розподіл за контроллерами-методами-...
    Middleware працює за принципом ланцюга, передаючи управління активністю
    між його ланками (об'єктами). Реєстрація порядку роботи об'єктів здійснюється
    у Program.cs
</p>
<p>
    Концепція Middleware дозволяє вбудовувати власні об'єкти у ланцюг викликів,
    об'єктів може бути довільна кількість, відповідно у проєкті додається папка
    Middleware. Щодо особливостей класів-Middleware див. приклад у коді
</p>
<p>
    Запит проходить веб-сервер, до ASP надходить HttpContext{Request,Response}
    Як він далі проходить обробку?
    Спочатку він проходить усі Middleware один за одним у порядку їх створення
    у Program.cs<br/>
    Приклад проходження запиту в умовній системі з Middleware<br />
    Request<br />
    [Middleware]<br />
    - [кодування -> UTF-8]<br />
    - [підключити БД]<br />
    - [перевірити автентифікацію]<br />
    - [встановити мову, завантажити мовні літерали]<br />
    [Routing]<br />
    - Визначається контроллер<br />
    - Визначається метод<br />
    - Передається керування методу - у довільному методі є 
        дані з автентифікації, з обраної мови<br />
    [View]<br />
    - Визначається представлення<br />
    - Передається керування Razor<br />
</p>