@model ASP_201.Models.Home.PassDataModel

@{
    ViewData["Title"] = Model.Header;
}

<div class="text-center">
    <h1 class="display-4">@Model.Title</h1>
</div>
<p>
    Шаблони відображення (DisplayTemplates) дозволяють уніфікувати спосіб
    відображення певних типів даних, як основних, на зразок String, так і
    користувацьких типів, як-то Product. Це зменшує кількість коду,
    прибирає повторюваність коду та "централізує" зміни.
</p>
<p>
    Шаблони відображення поміщуються у папку DisplayTemplates (назва важлива)
    розміщену у Views/[Controller]. Назва шаблону - [тип даних].cshtml
</p>

@Html.DisplayFor(model => model.Products[0])

<p>
    Для використання шаблону викликається "помічник" 
    <code>
        &commat;Html.DisplayFor(m => m.Products[0])
    </code>
    Вхідний параметр <code>m</code> це модель сторінки та селектор її частини.
    Якщо потрібна вся модель, то вживається <code>m => m</code>.
    Вибір шаблону відбувається автоматично за збігом назви типу даних селектора
    (m.Products[0]) та назви файлу шаблона з папки DisplayTemplates.
</p>
<p>
    Якщо тип даних для шаблону є складеним, наприклад, колекція, то зробити
    назву файлу з таким типом неможливо. У такому разі відбувається звернення
    до шаблону за іменем.
</p>

@Html.DisplayFor(m => m.Products, "Products")

<p>
    Для явного зазначення шаблону слід вжити другий параметр ("Products")
    у виклику помічника
    <code>
        &commat;Html.DisplayFor(m => m.Products, "Products")
    </code>
    !! Без цього параметру DisplayFor проробляє колекцію, але для кожного
    елементу підставляє одиничний шаблон, не утворюючи спільний контейнер
</p>